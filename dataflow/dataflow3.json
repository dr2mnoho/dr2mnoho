{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSQLAddr",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlWatermarkAddr",
						"type": "DatasetReference"
					},
					"name": "watermarktable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "BlobStorage",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "lookup1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          AddressLine2 as string,",
				"          City as string,",
				"          StateProvince as string,",
				"          CountryRegion as string,",
				"          PostalCode as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          tablename as string,",
				"          watermarkdate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT  [watermarkdate]\\n  FROM [dbo].[watermark]\\nwhere tablename = \\'Addr\\'',",
				"     format: 'query') ~> watermarktable",
				"source1, watermarktable lookup(ModifiedDate > watermarkdate,",
				"     multiple: false,",
				"     pickup: 'any',",
				"     broadcast: 'right')~> lookup1",
				"lookup1 aggregate(AddressID = count()) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Correlationid as string,",
				"          Operationname as string,",
				"          Status as string,",
				"          Eventcategory as string,",
				"          Level as string,",
				"          Time as string,",
				"          Subscription as string,",
				"          Eventinitiatedby as string,",
				"          Resourcetype as string,",
				"          Resourcegroup as string,",
				"          Resource as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}